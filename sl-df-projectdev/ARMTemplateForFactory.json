{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sl-df-projectdev"
		},
		"AzureDataLakeStorageLinkedService_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLinkedService'"
		},
		"AzureSQLLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSQLLinkedService'"
		},
		"AzureDataLakeStorageLinkedService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://slfirststorageaccount.dfs.core.windows.net/"
		},
		"AzureSQLLinkedService_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sl-project-tes-dev.database.windows.net"
		},
		"AzureSQLLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sl-dev-dataproject"
		},
		"AzureSQLLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sldataanalyst"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/incremental_ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AzuretoDataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LastCDC",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "current",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from @{pipeline().parameters.schema}.@{pipeline().parameters.table} where @{pipeline().parameters.cdc}>\n'@{if(empty(pipeline().parameters.from_date),activity('LastCDC').output.value[0].cdc,pipeline().parameters.from_date)}'\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_dynamic_sink",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@pipeline().parameters.table",
										"type": "Expression"
									},
									"file": {
										"value": "@concat(pipeline().parameters.table,'_',variables('current'))",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LastCDC",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Dynamic_Json",
								"type": "DatasetReference",
								"parameters": {
									"container": "bronze",
									"folder": {
										"value": "@{pipeline().parameters.table}_cdc",
										"type": "Expression"
									},
									"file": "cdc.json"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "current",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "current",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "IfIncrementalData",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "AzuretoDataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('AzuretoDataLake').output.dataRead,0 )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Delete1",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Parquet_dynamic_sink",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@pipeline().parameters.table",
													"type": "Expression"
												},
												"file": {
													"value": "@concat(pipeline().parameters.table,'_',variables('current'))",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "max_cdc",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "AzureSQLLinkedService",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "select MAX(@{pipeline().parameters.cdc}) as cdc from @{pipeline().parameters.schema}.@{pipeline().parameters.table}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "update_last_cdc",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "max_cdc",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc",
													"value": {
														"value": "@activity('max_cdc').output.resultSets[0].rows[0].cdc",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Dynamic_Json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@{pipeline().parameters.table}_cdc",
													"type": "Expression"
												},
												"file": "empty.json"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Dynamic_Json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@{pipeline().parameters.table}_cdc",
													"type": "Expression"
												},
												"file": "cdc.json"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cdc": {
						"type": "String"
					},
					"schema": {
						"type": "String"
					},
					"table": {
						"type": "String"
					},
					"from_date": {
						"type": "string"
					}
				},
				"variables": {
					"current": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDataset')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_dynamic_sink')]",
				"[concat(variables('factoryId'), '/datasets/Dynamic_Json')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incremental_loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.loop_input",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "AzuretoDataLake",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LastCDC",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "current",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().schema}.@{item().table} where @{item().cdc_col}>\n'@{if(empty(item().from_date),activity('LastCDC').output.value[0].cdc,item().from_date)}'\n\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "AzureSqlDataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet_dynamic_sink",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@item().table",
													"type": "Expression"
												},
												"file": {
													"value": "@concat(item().table,'_',variables('current'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LastCDC",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "Dynamic_Json",
											"type": "DatasetReference",
											"parameters": {
												"container": "bronze",
												"folder": {
													"value": "@{item().table}_cdc",
													"type": "Expression"
												},
												"file": "cdc.json"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "current",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "current",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "IfIncrementalData",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "AzuretoDataLake",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('AzuretoDataLake').output.dataRead,0 )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Delete1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "Parquet_dynamic_sink",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"folder": {
																"value": "@item().table",
																"type": "Expression"
															},
															"file": {
																"value": "@concat(item().table,'_',variables('current'))",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "max_cdc",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "AzureSQLLinkedService",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "select MAX(@{item().cdc_col}) as cdc from @{item().schema}.@{item().table}",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "update_last_cdc",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "max_cdc",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "JsonSource",
														"additionalColumns": [
															{
																"name": "cdc",
																"value": {
																	"value": "@activity('max_cdc').output.resultSets[0].rows[0].cdc",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "JsonReadSettings"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "Dynamic_Json",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"folder": {
																"value": "@{item().table}_cdc",
																"type": "Expression"
															},
															"file": "empty.json"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Dynamic_Json",
														"type": "DatasetReference",
														"parameters": {
															"container": "bronze",
															"folder": {
																"value": "@{item().table}_cdc",
																"type": "Expression"
															},
															"file": "cdc.json"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Alerts",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Failed",
									"Skipped",
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-28.northcentralus.logic.azure.com:443/workflows/bc0bed43009d45acbd73bb4cbca599e8/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=E2rg4aIA9HSm0GNF--4Xz1BEO0nign7qMbpQ5mqB8_s",
							"body": {
								"value": "{\n    \"pipeline_name\":\"@{pipeline().Pipeline}\",\n    \"pipeline_runid\":\"@{pipeline().RunId}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"loop_input": {
						"type": "array",
						"defaultValue": [
							{
								"schema": "dbo",
								"table": "DimUser",
								"cdc_col": "updated_at",
								"from_date": ""
							},
							{
								"schema": "dbo",
								"table": "DimTrack",
								"cdc_col": "updated_at",
								"from_date": ""
							},
							{
								"schema": "dbo",
								"table": "DimDate",
								"cdc_col": "date",
								"from_date": ""
							},
							{
								"schema": "dbo",
								"table": "DimArtist",
								"cdc_col": "updated_at",
								"from_date": ""
							},
							{
								"schema": "dbo",
								"table": "FactStream",
								"cdc_col": "stream_timestamp",
								"from_date": ""
							}
						]
					}
				},
				"variables": {
					"current": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlDataset')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_dynamic_sink')]",
				"[concat(variables('factoryId'), '/datasets/Dynamic_Json')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamic_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"cdc": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_dynamic_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLinkedService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLinkedService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLinkedService_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSQLLinkedService_properties_typeProperties_server')]",
					"database": "[parameters('AzureSQLLinkedService_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSQLLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSQLLinkedService_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}